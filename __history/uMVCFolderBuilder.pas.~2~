unit uMVCFolderBuilder;

interface

type
  TMVCFolderBuilder = class
  public
    class procedure GerarPastas(const BasePath: string);
    class procedure GerarPastasCustomizadas(const BasePath: string);
  end;

implementation

uses
  System.IOUtils,
  System.SysUtils,
  System.Classes,
  System.IniFiles;

class procedure TMVCFolderBuilder.GerarPastas(const BasePath: string);
const
  Pastas: array[0..11] of string = (
    'Model\Entities',
    'Model\DAO',
    'Controller\Interfaces',
    'Controller\Implementations',
    'Bridge\Endpoints',
    'Bridge\Session',
    'Bridge\Utils',
    'View\WebApp',
    'Services',
    'Utils',
    'Factory',
    'Resources'
  );
var
  Pasta, Caminho: string;
begin
  if not TDirectory.Exists(BasePath) then
    TDirectory.CreateDirectory(BasePath);

  for Pasta in Pastas do
  begin
    Caminho := TPath.Combine(BasePath, Pasta);
    if not TDirectory.Exists(Caminho) then
      TDirectory.CreateDirectory(Caminho);
  end;
end;

class procedure TMVCFolderBuilder.GerarPastasCustomizadas(const BasePath: string);
var
  Ini: TIniFile;
  Pasta, Caminho: string;
  i: Integer;
begin
  if not TDirectory.Exists(BasePath) then
    TDirectory.CreateDirectory(BasePath);

  Ini := TIniFile.Create(TPath.Combine(ExtractFilePath(ParamStr(0)), 'EstruturaMVC.ini'));
  try
    i := 0;
    while True do
    begin
      Pasta := Ini.ReadString('Pastas', IntToStr(i), '');
      if Pasta = '' then Break;
      Caminho := TPath.Combine(BasePath, Pasta);
      if not TDirectory.Exists(Caminho) then
        TDirectory.CreateDirectory(Caminho);
      Inc(i);
    end;
  finally
    Ini.Free;
  end;
end;

end.
